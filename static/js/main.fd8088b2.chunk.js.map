{"version":3,"sources":["components/LogIn/SocialMediaLogin.tsx","components/LogIn/PasswordInput.tsx","components/LogIn/LogInForm.tsx","components/LogIn/SignInForm.tsx","firebase.ts","components/LogIn/LogIn.tsx","App.tsx","serviceWorker.js","index.js"],"names":["SocialMediaLogin","props","className","onSubmit","onSocialMediaLogIn","PasswordInput","useState","isPasswordVisible","setPasswordVisibility","handlePasswordVisibilityClick","event","target","previousSibling","focus","type","placeholder","onChange","onPasswordChange","onClick","LogInForm","setUser","setPasswd","rememberUser","setRemembeUser","onLogIn","onRegisterClicked","value","name","id","checked","SignInForm","setMail","setName","onSignIn","onLogInClicked","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authenticator","LogIn","loginVisible","setLoginVisibility","setSignInisibility","style","boxShadow","preventDefault","rta","auth","signInWithEmailAndPassword","alert","console","log","createUserWithEmailAndPassword","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fd8088b2.chunk.js","sourcesContent":["import React from 'react'\nimport './SocialMediaLogin.scss'\n\nexport default function SocialMediaLogin(props: { onSocialMediaLogIn: Function }) {\n\n    const onFormSubmitted = () => {\n        props.onSocialMediaLogIn();\n    }\n\n    return (\n        <form className=\"socialMediaLogin d-flex flex-column justify-content-between py-5\" onSubmit={onFormSubmitted}>\n            <h1 className=\"brand text-center\">SMARTFIT</h1>\n            <p className=\"socialLogInText mb-4\">Entra con alguna red social para hacerlo mas rapido</p>\n            <button className=\"btn facebook py-2 my-2  w-100\">\n                <div className='buttonContent d-flex align-items-center justify-content-center'>\n                    <i className=\"fab fa-facebook-f mr-3\"></i>\n                    <div className=\"\">Entra con facebook</div>\n                </div>\n            </button>\n            <button className=\"btn twitter py-2 my-2 w-100\">\n                <div className='buttonContent d-flex align-items-center justify-content-center'>\n                    <i className=\"fab fa-twitter mr-3\"></i>\n                    <div className=\"\">Entra con twitter</div>\n                </div>\n            </button>\n            <button className=\"btn google py-2 my-2 w-100\">\n                <div className='buttonContent d-flex align-items-center justify-content-center'>\n                    <i className=\"fab fa-google mr-3\"></i>\n                    <div className=\"\">Entra con google</div>\n                </div>\n            </button>\n        </form>\n    )\n}","import React, { useState } from 'react'\nimport './PasswordInput.scss'\n\nexport default function PasswordInput(props: { onPasswordChange: Function }) {\n\n    const [isPasswordVisible, setPasswordVisibility] = useState(false);\n\n    const handlePasswordVisibilityClick = (event: any) => {\n        setPasswordVisibility(!isPasswordVisible)\n        event.target.previousSibling.focus()\n    }\n\n    return (\n        <div className='p-2 my-3  d-flex align-items-center passwordInput'>\n            <input className=\"flex-grow-1\" type={isPasswordVisible ? 'text' : 'password'}\n                placeholder=\"Contrasena\"\n                onChange={event => props.onPasswordChange(event)} />\n\n            {isPasswordVisible ?\n                <i className=\"far fa-eye\" onClick={handlePasswordVisibilityClick} />\n                :\n                <i className=\"far fa-eye-slash\" onClick={handlePasswordVisibilityClick} />\n            }\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport PasswordInput from './PasswordInput';\n\nexport default function LogInForm(props: { onLogIn: Function, onRegisterClicked: Function }) {\n\n\n    const [user, setUser] = useState('');\n    const [passwd, setPasswd] = useState('');\n    const [rememberUser, setRemembeUser] = useState(false);\n\n    const handleUserChange = (event: React.ChangeEvent<HTMLInputElement>) => { setUser(event.target.value) }\n\n    const handlePasswdChange = (event: React.ChangeEvent<HTMLInputElement>) => { setPasswd(event.target.value) }\n\n    const handleRememberCbxChange = () => { setRemembeUser(!rememberUser) }\n\n    const handleFormSubmitted = (event: React.SyntheticEvent) => {\n        props.onLogIn(event);\n    }\n\n    return (\n        <form className='d-flex flex-column justify-content-between'\n            onSubmit={handleFormSubmitted} >\n            <div className='d-flex flex-column align-items-center justify-content-center'>\n                <h2 className=\"text-center font-weight-bold\">Ingresa a tu cuenta</h2>\n                <p>\n                    Todavia no tenes una?\n                    <span className='link' onClick={() => props.onRegisterClicked()} > Registrate! </span>\n                </p>\n            </div>\n\n            <div className=\"d-flex flex-column justify-content-between\">\n                <input className=\"p-2 my-3 defaultInput\" type=\"text\"\n                    placeholder=\"Direccion de mail\"\n                    onChange={handleUserChange} />\n                <PasswordInput onPasswordChange={handlePasswdChange} />\n                <div className=\"d-flex justify-content-between align-items-center my-3 font-size-small \">\n                    <div>\n                        <input type=\"checkbox\" name=\"remember\" id=\"remember\"\n                            checked={rememberUser}\n                            onChange={handleRememberCbxChange} />\n                        <span className=\"ml-2\">Recordame</span>\n                    </div>\n\n                    <div className=\"link\">Recuperar contrasena</div>\n                </div>\n            </div>\n\n            <button className=\"py-2 btn btn-primary\">Entra con tu mail</button>\n        </form>\n    )\n}","import React, { useState } from 'react'\nimport PasswordInput from './PasswordInput';\n\nexport default function SignInForm(props: { onSignIn: Function, onLogInClicked: Function }) {\n\n    const [main, setMail] = useState('');\n    const [name, setName] = useState('');\n    const [passwd, setPasswd] = useState('');\n\n    const handleMailChange = (event: React.ChangeEvent<HTMLInputElement>) => { setMail(event.target.value) }\n\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => { setName(event.target.value) }\n\n    const handlePasswdChange = (event: React.ChangeEvent<HTMLInputElement>) => { setPasswd(event.target.value) }\n\n    const handleFormSubmitted = (event: React.SyntheticEvent) => {\n        props.onSignIn(event);\n    }\n\n    return (\n        <form className='d-flex flex-column justify-content-between'\n            onSubmit={handleFormSubmitted} >\n            <div className='d-flex flex-column align-items-center justify-content-center'>\n                <h2 className=\"text-center font-weight-bold\">Crea gratis tu cuenta!</h2>\n\n                <p>\n                    Ya tenes una cuenta?\n                    <span className='link' onClick={() => props.onLogInClicked()} > Entra! </span>\n                </p>\n            </div>\n\n\n            <div className=\"d-flex flex-column\">\n                <input className=\"p-2 my-3 defaultInput\" type=\"text\"\n                    placeholder=\"Direccion de mail\"\n                    onChange={handleMailChange} />\n                <input className=\"p-2 my-3 defaultInput\" type=\"text\"\n                    placeholder=\"Nombre\"\n                    onChange={handleNameChange} />\n                <PasswordInput onPasswordChange={handlePasswdChange} />\n            </div>\n\n            <button className=\"py-2 btn btn-primary\">Registrate con tu mail</button>\n        </form>\n    )\n}","import * as firebase from \"firebase/app\";\n\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAbxr7tiFQ0IHF6iuB2uAYBpRYm2VJMXuQ\",\n    authDomain: \"smart-fit-app.firebaseapp.com\",\n    databaseURL: \"https://smart-fit-app.firebaseio.com\",\n    projectId: \"smart-fit-app\",\n    storageBucket: \"smart-fit-app.appspot.com\",\n    messagingSenderId: \"10757053827\",\n    appId: \"1:10757053827:web:5a91cf7ade97ec65116ab6\",\n    measurementId: \"G-B0KZKMLTV7\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst authenticator = firebase.auth();\n\nexport default authenticator;","import React, { useState } from 'react';\n\nimport SocialMediaLogin from './SocialMediaLogin';\nimport LogInForm from './LogInForm';\nimport SignInForm from './SignInForm';\n\nimport auth from '../../firebase';\n\nexport default function LogIn() {\n\n    const [loginVisible, setLoginVisibility] = useState(true);\n    const [signInVisible, setSignInisibility] = useState(true);\n\n    const handleMailLogIn = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n        let rta = auth.signInWithEmailAndPassword('hola', 'asd');\n        alert(rta);\n        console.log(rta)\n    }\n\n    const handleSignIn = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n        let rta = auth.createUserWithEmailAndPassword('tomirodriguez.89@gmail.com', 'pendorchorosa');\n        console.log(rta)\n    }\n\n    const hadnleSocialMediaLogin = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n    }\n\n    const showSignInForm = () => {\n        setLoginVisibility(false);\n        setSignInisibility(true);\n    }\n\n    const showLogInForm = () => {\n        setLoginVisibility(true);\n        setSignInisibility(false);\n    }\n\n    return (\n        <div className='d-flex align-items-center h-100 p-2'>\n            <div className=\"container\">\n                <div className=\"row\" style={{ boxShadow: \"10px 0px 30px rgba(56, 56, 56, 0.4\" }}>\n                    <div className=\"col-12 col-md-7 p-5 my-auto\">\n                        {\n                            loginVisible ?\n                                <LogInForm\n                                    onLogIn={handleMailLogIn}\n                                    onRegisterClicked={showSignInForm} />\n                                :\n                                <SignInForm\n                                    onSignIn={handleSignIn}\n                                    onLogInClicked={showLogInForm} />\n                        }\n                    </div>\n                    <div className=\"col-12 col-md-5 p-5  bg-darkblue d-none d-md-block\">\n                        <SocialMediaLogin\n                            onSocialMediaLogIn={hadnleSocialMediaLogin} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport LogIn from './components/LogIn/LogIn';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <LogIn />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}